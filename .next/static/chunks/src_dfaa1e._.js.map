{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/dashboard/Graph.tsx"],"sourcesContent":["\"use client\";\nimport dynamic from \"next/dynamic\";\nimport { useCallback, useRef } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { GraphData, Node, Link, ForceGraphNode, ForceGraphLink } from \"@/types/graph\";\n// dynamically importing forcegraph2d to prevent SSR issues\nconst ForceGraph2D = dynamic(\n  () => import('react-force-graph-2d'),\n  { ssr: false }\n);\ninterface GraphProps {\n  graphData: GraphData;\n  isLoading: boolean;\n  centerNode: Node | null;\n}\nconst GRAPH_CONFIG = {\n  NODE_SIZE: 3,\n  CENTER_NODE_VALUE: 4,\n  NORMAL_NODE_VALUE: 2,\n  ZOOM_LEVEL: 2,\n  ZOOM_DURATION: 1000,\n  FONT_SIZE: 12,\n  NODE_RADIUS: 6,\n  LINK_WIDTH: 0.05,\n  LINK_CURVATURE: 0.05,\n} as const;\n\nconst COLORS = {\n  SENDING: \"rgba(255, 0, 0, 0.8)\",\n  RECEIVING: \"rgba(0, 255, 0, 0.8)\",\n  DEFAULT: \"rgba(204, 204, 204, 0.5)\",\n  NODE_FILL: \"rgba(211,211,211, 0.3)\",\n  NODE_TEXT: \"white\",\n  NODE_HIGHLIGHT: \"rgba(176, 38, 255, 0.8)\",\n  BACKGROUND: \"black\",\n} as const;\n\nexport const Graph = ({ graphData,isLoading, centerNode }: GraphProps) => {\n  const router = useRouter();\n  const fgRef = useRef<any>(null);\n  const searchParams = useSearchParams();\n\n  const getNodeId = useCallback((node: string | Node): string => {\n    return typeof node === \"object\" && \"id\" in node ? node.id : node;\n  }, []);\n\n  const getLinkColor = useCallback(\n    (link: Link): string => {\n      const sourceId = getNodeId(link.source);\n      const targetId = getNodeId(link.target);\n\n      if (centerNode) {\n        if (sourceId === centerNode.id) return COLORS.SENDING;\n        if (targetId === centerNode.id) return COLORS.RECEIVING;\n      }\n      return COLORS.DEFAULT;\n    },\n    [centerNode, getNodeId]\n  );\n\n  const handleNodeClick = useCallback(\n    (node: ForceGraphNode) => {\n      router.push(`/dashboard/${node.id}`);\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"lastSearchedAddress\", node.id);\n      }\n    },\n    [router]\n  );\n\n  const handleLinkClick = useCallback((link: Link) => {\n    console.log('Link Details:', {\n      transactionHash: link.hash,\n      timestamp: link.timestamp,\n      from: typeof link.source === 'object' ? link.source.id : link.source,\n      to: typeof link.target === 'object' ? link.target.id : link.target,\n      gasPrice: link.gasPrice,\n      gasUsed: link.gasUsed,\n      methodId: link.methodId,\n      functionName: link.functionName\n    });\n  }, []);\n\n  const nodeCanvasObject = useCallback(\n    (node: Node, ctx: CanvasRenderingContext2D, globalScale: number) => {\n      const fontSize = GRAPH_CONFIG.FONT_SIZE / globalScale;\n      const address = searchParams.get(\"address\");\n      const x = node.x || 0;\n      const y = node.y || 0;\n\n      ctx.beginPath();\n      ctx.arc(x, y, GRAPH_CONFIG.NODE_RADIUS, 0, 2 * Math.PI);\n      ctx.fillStyle = COLORS.NODE_FILL;\n      ctx.fill();\n\n      if (node.id === address || node.isCenter) {\n        ctx.strokeStyle = COLORS.NODE_HIGHLIGHT;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      }\n\n      ctx.font = `${fontSize}px Sans-Serif`;\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"middle\";\n      ctx.fillStyle = COLORS.NODE_TEXT;\n      \n      const displayText = node.id.substring(0, 6) + \"...\" + node.id.substring(node.id.length - 4);\n      ctx.fillText(displayText, x, y);\n    },\n    [searchParams]\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500\"></div>\n        <p className=\"text-white ml-4\">Loading transaction data...</p>\n      </div>\n    );\n  }\n\n  if (graphData.nodes.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full text-white\">\n        <p>No transaction data found for this address.</p>\n      </div>\n    );\n  }\n\n  return (\n    <ForceGraph2D\n      ref={fgRef}\n      graphData={graphData}\n      nodeRelSize={GRAPH_CONFIG.NODE_SIZE}\n      nodeVal={(node) => node.val || GRAPH_CONFIG.NORMAL_NODE_VALUE}\n      nodeLabel={(node): string => String(node.id)}\n      onNodeClick={(node) => handleNodeClick(node as ForceGraphNode)}\n      onLinkClick={(link) => handleLinkClick(link as ForceGraphLink)}\n      backgroundColor={COLORS.BACKGROUND}\n      nodeCanvasObject={(node, ctx, globalScale) => nodeCanvasObject(node as Node, ctx, globalScale)}\n      cooldownTicks={100}\n      d3AlphaDecay={0.01}\n      d3VelocityDecay={0.1}\n      linkColor={() => \"rgba(255, 255, 255, 0.3)\"}\n      linkCurvature={(link) => (link as ForceGraphLink).curvature}\n      linkDirectionalParticles={1}\n      linkDirectionalParticleSpeed={0.005}\n      linkDirectionalParticleColor={getLinkColor}\n      nodeStrength={-500}\n      chargeStrength={-500}\n       // Add these zoom-related props\n      //  zoom={GRAPH_CONFIG.ZOOM_LEVEL}\n      //  minZoom={2}\n      //  maxZoom={4}\n      //  onEngineStop={() => {\n      //   // Auto-zoom when the graph stabilizes\n      //   if (fgRef.current) {\n      //     fgRef.current.zoomToFit(GRAPH_CONFIG.ZOOM_DURATION, 50);\n      //   }\n      // }}\n    />\n  );\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/dashboard/TransactionTable.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Clock, ArrowUpRight, ArrowDownLeft, ExternalLink } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { TransactionTableData } from \"@/types/api\";\nimport { useRouter } from \"next/navigation\";\ninterface TransactionTableProps {\n  transactions: TransactionTableData[];\n  isLoading: boolean;\n}\n\nexport function TransactionTable({\n  transactions,\n  isLoading,\n}: TransactionTableProps) {\n  const router = useRouter();\n  const [currentPage, setCurrentPage] = useState(1);\n  const transactionsPerPage = 10;\n\n  const totalPages = Math.ceil(transactions.length / transactionsPerPage);\n  const startIndex = (currentPage - 1) * transactionsPerPage;\n  const endIndex = startIndex + transactionsPerPage;\n  const currentTransactions = transactions.slice(startIndex, endIndex);\n\n  // Helper function to truncate addresses and hashes\n  const truncateString = (\n    str: string,\n    startLength: number = 6,\n    endLength: number = 4\n  ) => {\n    if (str.length <= startLength + endLength) return str;\n    return `${str.slice(0, startLength)}...${str.slice(-endLength)}`;\n  };\n\n  // Helper function for transaction type icon\n  const getTransactionTypeIcon = (type: string) => {\n    return type === \"incoming\" ? (\n      <ArrowDownLeft className=\"h-3 w-3 text-green-500\" />\n    ) : (\n      <ArrowUpRight className=\"h-3 w-3 text-red-500\" />\n    );\n  };\n  // Handler for hash click - opens Etherscan\n  const handleHashClick = (hash: string) => {\n    window.open(`https://etherscan.io/tx/${hash}`, \"_blank\");\n  };\n\n  // Handler for address click - navigates to dashboard\n  const handleAddressClick = (address: string) => {\n    router.push(`/dashboard/${address}`);\n  };\n  if (isLoading) {\n    return (\n      <Card className=\"glass-panel animate-pulse\">\n        <CardHeader className=\"pb-2\">\n          <div className=\"h-6 bg-gray-700/50 rounded w-36\"></div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"h-8 bg-gray-700/50 rounded\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"glass-panel\">\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-lg flex items-center text-white\">\n          <Clock className=\"mr-2 h-4 w-4 text-purple-500\" />\n          Transaction History\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"border border-gray-800 rounded-lg\">\n          <table className=\"w-full\">\n            <thead className=\"bg-black text-gray-400\">\n              <tr className=\"text-left text-xs\">\n                <th className=\"p-2\">Type</th>\n                <th className=\"p-2\">Hash</th>\n                <th className=\"p-2\">Time</th>\n                <th className=\"p-2\">From</th>\n                <th className=\"p-2\">To</th>\n                <th className=\"p-2\">Amount</th>\n                <th className=\"p-2\">Gas Cost</th>\n                <th className=\"p-2\">Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-xs\">\n              {currentTransactions.map((tx) => (\n                <tr key={tx.hash} className=\"border-t border-gray-800\">\n                  <td className=\"p-2\">\n                    <div className=\"flex items-center\">\n                      {getTransactionTypeIcon(tx.type)}\n                      <span className=\"ml-1 text-white\">{tx.type}</span>\n                    </div>\n                  </td>\n                  <td className=\"p-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"h-6 px-2 font-mono text-white hover:text-purple-400\"\n                      onClick={() => handleHashClick(tx.hash)}\n                    >\n                      <span className=\"truncate\">\n                        {truncateString(tx.hash)}\n                      </span>\n                      <ExternalLink className=\"h-3 w-3 ml-1\" />\n                    </Button>\n                  </td>\n                  <td className=\"p-2 text-gray-400 whitespace-nowrap\">\n                    {new Date(tx.timestamp).toLocaleDateString()}\n                  </td>\n                  <td className=\"p-2\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"h-6 px-2 font-mono text-gray-400 hover:text-purple-400\"\n                      onClick={() => handleAddressClick(tx.from)}\n                    >\n                      {truncateString(tx.from)}\n                    </Button>\n                  </td>\n                    <td className=\"p-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-6 px-2 font-mono text-gray-400 hover:text-purple-400\"\n                        onClick={() => handleAddressClick(tx.to)}\n                      >\n                        {truncateString(tx.to)}\n                      </Button>\n                    </td>\n                  <td className=\"p-2 text-white whitespace-nowrap\">\n                    {tx.amount}\n                  </td>\n\n                  <td className=\"p-2 text-gray-400 whitespace-nowrap\">\n                    {tx.gasUsed}\n                  </td>\n                  <td className=\"p-2\">\n                    <span\n                      className={`capitalize ${\n                        tx.status === \"success\"\n                          ? \"text-green-500\"\n                          : \"text-red-500\"\n                      }`}\n                    >\n                      {tx.status}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        <div className=\"flex items-center justify-between mt-3\">\n          <span className=\"text-xs text-gray-400\">\n            Page {currentPage} of {totalPages}\n          </span>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"h-8 px-3 text-xs\"\n              onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}\n              disabled={currentPage === 1}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"h-8 px-3 text-xs\"\n              onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))}\n              disabled={currentPage === totalPages}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/dashboard/WalletDetails.tsx"],"sourcesContent":["import { Wallet, Coins } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { WalletBalance } from \"@/types/api\";\n\ninterface WalletBalanceProps {\n  balance: WalletBalance | null;\n  isLoading: boolean;\n  lastActive: string;\n  totalOutgoing: number;\n  totalIncoming: number;\n}\n\nexport function WalletBalanceCards({\n  balance,\n  isLoading,\n  lastActive,\n  totalOutgoing,\n  totalIncoming,\n}: WalletBalanceProps) {\n  if (isLoading) {\n    return (\n      <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n        {[...Array(3)].map((_, i) => (\n          <Card key={i} className=\"glass-panel animate-pulse\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <div className=\"h-4 bg-gray-700/50 rounded w-24\"></div>\n              <div className=\"h-4 w-4 bg-gray-700/50 rounded\"></div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-8 bg-gray-700/50 rounded w-32\"></div>\n              <div className=\"h-3 bg-gray-700/50 rounded w-24 mt-2\"></div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (!balance) return null;\n\n  return (\n    <>\n      <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n        <Card className=\"glass-panel\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-xs sm:text-sm font-medium text-gray-400\">\n              Wallet Balance\n            </CardTitle>\n            <Coins className=\"h-4 w-4 text-purple-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-xl sm:text-2xl font-bold text-white\">\n              {balance.balance.eth} ETH\n            </div>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Last Active: {lastActive}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"glass-panel\">\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle className=\"text-xl sm:text-2xl flex items-center text-white font-extra-bold\">\n              <Wallet className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\n              Wallet Details\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3 sm:space-y-4 text-gray-400\">\n              <div>\n                <p className=\"text-xs sm:text-sm font-medium text-gray-400\">\n                  Address\n                </p>\n                <p className=\"font-mono text-xs sm:text-sm mt-1 text-white break-all\">\n                  {balance.address}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"glass-panel\">\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <CardTitle className=\"text-xl sm:text-2xl flex items-center text-white font-extra-bold\">\n              <Wallet className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\n              Transactions Count\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3 sm:space-y-4 text-gray-400\">\n              <div className=\"flex flex-row items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 rounded-full bg-red-500 mr-2\"></div>\n                  <span className=\"text-xs text-gray-300\">Outgoing</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 rounded-full bg-green-500 mr-2\"></div>\n                  <span className=\"text-xs text-gray-300\">Imcoming</span>\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center justify-between\">\n                <div className=\"text-xs sm:text-sm font-medium text-white\">\n                  {totalOutgoing}\n                </div>\n                <div className=\"text-xs sm:text-sm font-medium text-white\">\n                  {totalIncoming}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AADA;AAAA;;;;AAYO,SAAS,mBAAmB,EACjC,OAAO,EACP,SAAS,EACT,UAAU,EACV,aAAa,EACb,aAAa,EACM;IACnB,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACZ;mBAAI,MAAM;aAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,6LAAC,mIAAA,CAAA,OAAI;oBAAS,WAAU;;sCACtB,6LAAC,mIAAA,CAAA,aAAU;4BAAC,WAAU;;8CACpB,6LAAC;oCAAI,WAAU;;;;;;8CACf,6LAAC;oCAAI,WAAU;;;;;;;;;;;;sCAEjB,6LAAC,mIAAA,CAAA,cAAW;;8CACV,6LAAC;oCAAI,WAAU;;;;;;8CACf,6LAAC;oCAAI,WAAU;;;;;;;;;;;;;mBAPR;;;;;;;;;;IAanB;IAEA,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE;kBACE,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,6LAAC,mIAAA,CAAA,aAAU;4BAAC,WAAU;;8CACpB,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAA+C;;;;;;8CAGpE,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;;;;;;;sCAEnB,6LAAC,mIAAA,CAAA,cAAW;;8CACV,6LAAC;oCAAI,WAAU;;wCACZ,QAAQ,OAAO,CAAC,GAAG;wCAAC;;;;;;;8CAEvB,6LAAC;oCAAE,WAAU;;wCAA6B;wCAC1B;;;;;;;;;;;;;;;;;;;8BAKpB,6LAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,6LAAC,mIAAA,CAAA,aAAU;4BAAC,WAAU;sCACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACnB,6LAAC,yMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;oCAA+C;;;;;;;;;;;;sCAIrE,6LAAC,mIAAA,CAAA,cAAW;sCACV,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;;sDACC,6LAAC;4CAAE,WAAU;sDAA+C;;;;;;sDAG5D,6LAAC;4CAAE,WAAU;sDACV,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAO1B,6LAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,6LAAC,mIAAA,CAAA,aAAU;4BAAC,WAAU;sCACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACnB,6LAAC,yMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;oCAA+C;;;;;;;;;;;;sCAIrE,6LAAC,mIAAA,CAAA,cAAW;sCACV,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;wDAAK,WAAU;kEAAwB;;;;;;;;;;;;0DAE1C,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;wDAAK,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAG5C,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ;;;;;;0DAEH,6LAAC;gDAAI,WAAU;0DACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnB;KAtGgB"}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/components/dashboard/DashboardContent.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Search } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Graph } from \"@/components/dashboard/Graph\";\nimport type { Node, GraphData } from \"@/types/graph\";\nimport { TransactionTableData, WalletBalance } from \"@/types/api\";\nimport { TransactionTable } from \"@/components/dashboard/TransactionTable\";\nimport { WalletBalanceCards } from \"@/components/dashboard/WalletDetails\";\n\n\ninterface DashboardContentProps {\n  currentAddress?: string;\n}\ninterface TypeCounts {\n    incoming: number;\n    outgoing: number;\n  }\nconst DashboardContent = ({ currentAddress }: DashboardContentProps) => {\n  const [address, setAddress] = useState<string>(currentAddress || \"\");\n  const [isValidating, setIsValidating] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [graphData, setGraphData] = useState<GraphData>({ nodes: [], links: [] });\n  const [centerNode, setCenterNode] = useState<Node | null>(null);\n  const [tableData, setTableData] = useState<TransactionTableData[]>([]);\n  const [balanceData, setBalance] = useState<WalletBalance | null>(null);\n  const [walletLastActive, setWalletLastActive] = useState<string | null>(null);\n  const [totalOutgoing, setTotalOutgoing] = useState<number>(0);\n  const [totalIncoming, setTotalIncoming] = useState<number>(0);\n  const router = useRouter();\n\n  const fetchWalletData = useCallback(async (walletAddress: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const [transactionResponse, balanceResponse] = await Promise.all([\n        fetch(`/api/addresses/${walletAddress}/transactions`),\n        fetch(`/api/addresses/${walletAddress}/balance`)\n      ]);\n      \n      if (!transactionResponse.ok) {\n        const errorData = await transactionResponse.json();\n        throw new Error(errorData.error || `API returned status ${transactionResponse.status}`);\n      }\n      if (!balanceResponse.ok) {\n        const errorData = await balanceResponse.json();\n        throw new Error(errorData.error || `API returned status ${balanceResponse.status}`);\n      }\n      \n      // Parse both responses\n      const [transactionData, balanceData] = await Promise.all([\n        transactionResponse.json(),\n        balanceResponse.json()\n      ]);\n      const {graphData, tableData} = transactionData;\n      console.log(tableData[0]);\n      const countByTypeWithFilter = (transactions: TransactionTableData[]): TypeCounts => {\n        return {\n          outgoing: transactions.filter(tx => tx.type === \"outgoing\").length,\n          incoming: transactions.filter(tx => tx.type === \"incoming\").length\n        };\n      };\n      const { outgoing, incoming } = countByTypeWithFilter(tableData);\n      if (!graphData.nodes || !graphData.links || graphData.nodes.length === 0) {\n        throw new Error(\"No transaction data found for this address\");\n      }\n      const center = graphData.nodes.find((node: Node) => node.isCenter);\n      const walletLastActive = tableData[0].timestamp;\n      //Update State\n      setGraphData(graphData);\n      setCenterNode(center || null);\n      setTableData(tableData);\n      setBalance(balanceData);\n      setWalletLastActive(walletLastActive);\n      setTotalOutgoing(outgoing);\n      setTotalIncoming(incoming);\n    } catch (error: unknown) {\n      console.error(\"Error fetching graph data:\", error);\n      setError(error instanceof Error ? error.message : \"Failed to fetch transaction data\");\n      setGraphData({ nodes: [], links: [] });\n      setTableData([]);\n      setBalance(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (currentAddress) {\n      setAddress(currentAddress);\n      fetchWalletData(currentAddress);\n    }\n  }, [currentAddress, fetchWalletData]);\n\n  const isValidAddress = (address: string): boolean => {\n    return /^0x[a-fA-F0-9]{40}$/.test(address);\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n\n    if (!isValidAddress(address)) {\n      setError(\"Please enter a valid Ethereum address\");\n      return;\n    }\n\n    setIsValidating(true);\n    \n    try {\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"lastSearchedAddress\", address);\n      }\n      router.push(`/dashboard/${address}`);\n    } catch (error: unknown) {\n      setError(error instanceof Error ? error.message : \"Failed to navigate\");\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mb-8\">\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-900/50 text-red-300 rounded-md\">\n            ⚠️ {error}\n          </div>\n        )}\n        \n        <form onSubmit={handleSearch} className=\"flex gap-2\">\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n            <Input\n              type=\"text\"\n              placeholder=\"Enter wallet address (0x...)\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              className=\"pl-10 bg-black/20 border-gray-700 text-white placeholder:text-gray-400 h-12 w-full\"\n            />\n          </div>\n          <Button\n            type=\"submit\"\n            className=\"bg-purple-600 hover:bg-purple-700 h-12 px-6\"\n            disabled={isValidating || isLoading}\n          >\n            {isValidating || isLoading ? (\n              <div className=\"flex items-center justify-center\">\n                <span className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\" />\n                Searching...\n              </div>\n            ) : (\n              \"Search\"\n            )}\n          </Button>\n        </form>\n      </div>\n      \n      {currentAddress ? (\n        <div className=\"mb-4\">\n          <Card className=\"bg-gray-900/50 border-gray-800 text-white\">\n            <CardContent className=\"py-3 px-4\">\n              <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center\">\n                <div>\n                  <p className=\"text-sm text-gray-400 mb-1\">Current Wallet</p>\n                  <p className=\"font-mono text-sm break-all\">{currentAddress}</p>\n                </div>\n                <div className=\"mt-2 sm:mt-0\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-3 h-3 rounded-full bg-red-500 mr-2\"></div>\n                      <span className=\"text-xs text-gray-300\">Outgoing</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <div className=\"w-3 h-3 rounded-full bg-green-500 mr-2\"></div>\n                      <span className=\"text-xs text-gray-300\">Incoming</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      ) : (\n        <Card className=\"bg-gray-900/50 border-gray-800 text-white mb-4\">\n          <CardContent className=\"py-4 text-center\">\n            <p className=\"text-gray-400\">\n              Enter a wallet address above to visualize its transaction network\n            </p>\n          </CardContent>\n        </Card>\n      )}\n      \n      {/* Wallet Balance Cards */}\n      <div className=\"flex justify-center\">\n        <WalletBalanceCards \n          balance={balanceData}\n          isLoading={isLoading}\n          lastActive={walletLastActive || \"\"}\n          totalOutgoing={totalOutgoing}\n          totalIncoming={totalIncoming}\n        />\n      </div>\n      \n      <div className=\"mt-4 rounded-lg overflow-hidden bg-black min-h-[400px] h-[600px] max-h-[calc(100vh-200px)]\">\n        <Graph \n          graphData={graphData}\n          isLoading={isLoading}\n          centerNode={centerNode}\n        />\n      </div>\n      \n      {/* Transaction Table with Pagination */}\n      <div className=\"mt-4\">\n        <TransactionTable    \n          transactions={tableData}\n          isLoading={isLoading}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DashboardContent;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1698, "column": 0}, "map": {"version":3,"sources":["file://D%3A/repo/New%20folder/blockviz-main/src/app/dashboard/%5Baddress%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { useParams } from \"next/navigation\";\nimport DashboardContent from \"@/components/dashboard/DashboardContent\";\n\nexport default function AddressDashboardPage() {\n  const params = useParams();\n  const currentAddress = params.address as string;\n\n  return <DashboardContent currentAddress={currentAddress} />;\n}"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,iBAAiB,OAAO,OAAO;IAErC,qBAAO,6LAAC,sJAAA,CAAA,UAAgB;QAAC,gBAAgB;;;;;;AAC3C;GALwB;;QACP,qIAAA,CAAA,YAAS;;;KADF"}},
    {"offset": {"line": 1732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}